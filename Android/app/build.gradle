plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

android {
    namespace 'io.agora.agent'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId project.getProperty("APPLICATION_ID").toString()
        ndk.abiFilters 'arm64-v8a', 'armeabi-v7a'
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def host = project.getProperty("TOOLBOX_SERVER_HOST")
        resValue "string", "app_name", host.contains("global") ? "Convo AI" : "对话式智能体"
    }

    signingConfigs {
        release {
            storeFile new File(rootProject.rootDir.absolutePath + "/keystore.key")
            storePassword "965606"
            keyAlias "agora"
            keyPassword "965606"
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                outputFileName = new File(
                        rootProject.name + "_" +
                        "v" + defaultConfig.versionName + "_" +
                        new Date().format("yyyyMMddHHmm") + "_" +
                        buildType.name + ".apk")
            }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation project(':common')
    implementation project(':scenes:convoai')
    implementation project(':scenes:digitalhuman')
//    def convoAiModule = ':scenes:convoai'
//    if (findProject(convoAiModule) != null) {
//        runtimeOnly project(convoAiModule)
//    }

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}