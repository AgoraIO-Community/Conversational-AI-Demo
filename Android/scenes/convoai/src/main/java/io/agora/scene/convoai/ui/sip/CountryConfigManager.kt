package io.agora.scene.convoai.ui.sip

import io.agora.scene.convoai.api.CovSipCallee

/**
 * Enum representing a country configuration
 * Equivalent to Swift's CountryConfig but more convenient
 */
enum class CountryConfig(val flagEmoji: String, val dialCode: String) {
    // Asia
    CN("ğŸ‡¨ğŸ‡³", "+86"),
    JP("ğŸ‡¯ğŸ‡µ", "+81"),
    KR("ğŸ‡°ğŸ‡·", "+82"),
    IN("ğŸ‡®ğŸ‡³", "+91"),
    SG("ğŸ‡¸ğŸ‡¬", "+65"),
    TH("ğŸ‡¹ğŸ‡­", "+66"),
    MY("ğŸ‡²ğŸ‡¾", "+60"),
    ID("ğŸ‡®ğŸ‡©", "+62"),
    PH("ğŸ‡µğŸ‡­", "+63"),
    VN("ğŸ‡»ğŸ‡³", "+84"),
    TW("ğŸ‡¹ğŸ‡¼", "+886"),
    HK("ğŸ‡­ğŸ‡°", "+852"),
    MO("ğŸ‡²ğŸ‡´", "+853"),
    
    // Europe
    GB("ğŸ‡¬ğŸ‡§", "+44"),
    DE("ğŸ‡©ğŸ‡ª", "+49"),
    FR("ğŸ‡«ğŸ‡·", "+33"),
    IT("ğŸ‡®ğŸ‡¹", "+39"),
    ES("ğŸ‡ªğŸ‡¸", "+34"),
    RU("ğŸ‡·ğŸ‡º", "+7"),
    NL("ğŸ‡³ğŸ‡±", "+31"),
    CH("ğŸ‡¨ğŸ‡­", "+41"),
    AT("ğŸ‡¦ğŸ‡¹", "+43"),
    BE("ğŸ‡§ğŸ‡ª", "+32"),
    SE("ğŸ‡¸ğŸ‡ª", "+46"),
    NO("ğŸ‡³ğŸ‡´", "+47"),
    DK("ğŸ‡©ğŸ‡°", "+45"),
    FI("ğŸ‡«ğŸ‡®", "+358"),
    PL("ğŸ‡µğŸ‡±", "+48"),
    CZ("ğŸ‡¨ğŸ‡¿", "+420"),
    HU("ğŸ‡­ğŸ‡º", "+36"),
    RO("ğŸ‡·ğŸ‡´", "+40"),
    BG("ğŸ‡§ğŸ‡¬", "+359"),
    GR("ğŸ‡¬ğŸ‡·", "+30"),
    PT("ğŸ‡µğŸ‡¹", "+351"),
    IE("ğŸ‡®ğŸ‡ª", "+353"),
    LU("ğŸ‡±ğŸ‡º", "+352"),
    
    // North America
    US("ğŸ‡ºğŸ‡¸", "+1"),
    CA("ğŸ‡¨ğŸ‡¦", "+1"),
    MX("ğŸ‡²ğŸ‡½", "+52"),
    
    // South America
    BR("ğŸ‡§ğŸ‡·", "+55"),
    AR("ğŸ‡¦ğŸ‡·", "+54"),
    CL("ğŸ‡¨ğŸ‡±", "+56"),
    CO("ğŸ‡¨ğŸ‡´", "+57"),
    PE("ğŸ‡µğŸ‡ª", "+51"),
    VE("ğŸ‡»ğŸ‡ª", "+58"),
    UY("ğŸ‡ºğŸ‡¾", "+598"),
    PY("ğŸ‡µğŸ‡¾", "+595"),
    BO("ğŸ‡§ğŸ‡´", "+591"),
    EC("ğŸ‡ªğŸ‡¨", "+593"),
    GY("ğŸ‡¬ğŸ‡¾", "+592"),
    SR("ğŸ‡¸ğŸ‡·", "+597"),
    
    // Africa
    ZA("ğŸ‡¿ğŸ‡¦", "+27"),
    EG("ğŸ‡ªğŸ‡¬", "+20"),
    NG("ğŸ‡³ğŸ‡¬", "+234"),
    KE("ğŸ‡°ğŸ‡ª", "+254"),
    MA("ğŸ‡²ğŸ‡¦", "+212"),
    TN("ğŸ‡¹ğŸ‡³", "+216"),
    DZ("ğŸ‡©ğŸ‡¿", "+213"),
    GH("ğŸ‡¬ğŸ‡­", "+233"),
    ET("ğŸ‡ªğŸ‡¹", "+251"),
    UG("ğŸ‡ºğŸ‡¬", "+256"),
    TZ("ğŸ‡¹ğŸ‡¿", "+255"),
    ZW("ğŸ‡¿ğŸ‡¼", "+263"),
    ZM("ğŸ‡¿ğŸ‡²", "+260"),
    BW("ğŸ‡§ğŸ‡¼", "+267"),
    NA("ğŸ‡³ğŸ‡¦", "+264"),
    MW("ğŸ‡²ğŸ‡¼", "+265"),
    MZ("ğŸ‡²ğŸ‡¿", "+258"),
    MG("ğŸ‡²ğŸ‡¬", "+261"),
    MU("ğŸ‡²ğŸ‡º", "+230"),
    SC("ğŸ‡¸ğŸ‡¨", "+248"),
    RE("ğŸ‡·ğŸ‡ª", "+262"),
    
    // Oceania
    AU("ğŸ‡¦ğŸ‡º", "+61"),
    NZ("ğŸ‡³ğŸ‡¿", "+64"),
    FJ("ğŸ‡«ğŸ‡¯", "+679"),
    PG("ğŸ‡µğŸ‡¬", "+675"),
    NC("ğŸ‡³ğŸ‡¨", "+687"),
    VU("ğŸ‡»ğŸ‡º", "+678"),
    SB("ğŸ‡¸ğŸ‡§", "+677"),
    TO("ğŸ‡¹ğŸ‡´", "+676"),
    WS("ğŸ‡¼ğŸ‡¸", "+685"),
    KI("ğŸ‡°ğŸ‡®", "+686"),
    TV("ğŸ‡¹ğŸ‡»", "+688"),
    NR("ğŸ‡³ğŸ‡·", "+674"),
    PW("ğŸ‡µğŸ‡¼", "+680"),
    MH("ğŸ‡²ğŸ‡­", "+692"),
    FM("ğŸ‡«ğŸ‡²", "+691"),
    
    // Middle East
    AE("ğŸ‡¦ğŸ‡ª", "+971"),
    SA("ğŸ‡¸ğŸ‡¦", "+966"),
    QA("ğŸ‡¶ğŸ‡¦", "+974"),
    KW("ğŸ‡°ğŸ‡¼", "+965"),
    BH("ğŸ‡§ğŸ‡­", "+973"),
    OM("ğŸ‡´ğŸ‡²", "+968"),
    JO("ğŸ‡¯ğŸ‡´", "+962"),
    LB("ğŸ‡±ğŸ‡§", "+961"),
    SY("ğŸ‡¸ğŸ‡¾", "+963"),
    IQ("ğŸ‡®ğŸ‡¶", "+964"),
    IR("ğŸ‡®ğŸ‡·", "+98"),
    IL("ğŸ‡®ğŸ‡±", "+972"),
    PS("ğŸ‡µğŸ‡¸", "+970"),
    TR("ğŸ‡¹ğŸ‡·", "+90"),
    CY("ğŸ‡¨ğŸ‡¾", "+357"),
    
    // Other Important Countries
    IS("ğŸ‡®ğŸ‡¸", "+354"),
    MT("ğŸ‡²ğŸ‡¹", "+356"),
    EE("ğŸ‡ªğŸ‡ª", "+372"),
    LV("ğŸ‡±ğŸ‡»", "+371"),
    LT("ğŸ‡±ğŸ‡¹", "+370"),
    SK("ğŸ‡¸ğŸ‡°", "+421"),
    SI("ğŸ‡¸ğŸ‡®", "+386"),
    HR("ğŸ‡­ğŸ‡·", "+385"),
    RS("ğŸ‡·ğŸ‡¸", "+381"),
    BA("ğŸ‡§ğŸ‡¦", "+387"),
    ME("ğŸ‡²ğŸ‡ª", "+382"),
    MK("ğŸ‡²ğŸ‡°", "+389"),
    AL("ğŸ‡¦ğŸ‡±", "+355"),
    XK("ğŸ‡½ğŸ‡°", "+383"),
    MD("ğŸ‡²ğŸ‡©", "+373"),
    UA("ğŸ‡ºğŸ‡¦", "+380"),
    BY("ğŸ‡§ğŸ‡¾", "+375"),
    GE("ğŸ‡¬ğŸ‡ª", "+995"),
    AM("ğŸ‡¦ğŸ‡²", "+374"),
    AZ("ğŸ‡¦ğŸ‡¿", "+994"),
    KZ("ğŸ‡°ğŸ‡¿", "+7"),
    UZ("ğŸ‡ºğŸ‡¿", "+998"),
    KG("ğŸ‡°ğŸ‡¬", "+996"),
    TJ("ğŸ‡¹ğŸ‡¯", "+992"),
    TM("ğŸ‡¹ğŸ‡²", "+993"),
    AF("ğŸ‡¦ğŸ‡«", "+93"),
    PK("ğŸ‡µğŸ‡°", "+92"),
    BD("ğŸ‡§ğŸ‡©", "+880"),
    LK("ğŸ‡±ğŸ‡°", "+94"),
    MV("ğŸ‡²ğŸ‡»", "+960"),
    BT("ğŸ‡§ğŸ‡¹", "+975"),
    NP("ğŸ‡³ğŸ‡µ", "+977"),
    MM("ğŸ‡²ğŸ‡²", "+95"),
    LA("ğŸ‡±ğŸ‡¦", "+856"),
    KH("ğŸ‡°ğŸ‡­", "+855"),
    BN("ğŸ‡§ğŸ‡³", "+673"),
    TL("ğŸ‡¹ğŸ‡±", "+670"),
    MN("ğŸ‡²ğŸ‡³", "+976"),
    KP("ğŸ‡°ğŸ‡µ", "+850");
    
    /**
     * Get country code (enum name)
     */
    val countryCode: String get() = name
}

/**
 * Extension functions for CountryConfig to work with CovSipCallee
 */
fun CountryConfigManager.findByRegionCode(regionCode: String): CountryConfig? {
    return allCountries.firstOrNull { 
        it.countryCode == regionCode.uppercase() 
    }
}

fun CountryConfigManager.fromSipCallees(sipCallees: List<CovSipCallee>): List<CountryConfig> {
    return sipCallees.mapNotNull { callee ->
        findByRegionCode(callee.region_code)
    }.distinctBy { it.countryCode }
}

/**
 * Country Configuration Manager
 * Now using enum for better performance and type safety
 */
object CountryConfigManager {
    
    /**
     * All countries configuration
     * Now using enum values directly
     */
    val allCountries: List<CountryConfig> = CountryConfig.values().toList()
    
    /**
     * Get country by country code
     * Equivalent to Swift's getCountryByCode method
     */
    fun getCountryByCode(countryCode: String): CountryConfig? {
        return try {
            CountryConfig.valueOf(countryCode.uppercase())
        } catch (e: IllegalArgumentException) {
            null
        }
    }
    
    /**
     * Get country by dial code
     */
    fun getCountryByDialCode(dialCode: String): CountryConfig? {
        return allCountries.find { it.dialCode == dialCode }
    }
}
